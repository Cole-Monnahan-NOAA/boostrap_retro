library(tidyverse)
library(r4ss)
library(snowfall)
library(ggplot2)
theme_set(theme_bw())
packageVersion('r4ss') #  '1.42.0'
source('code/functions.R'
)
getwd()
Nreps <- 500
reps <- 0:Nreps # 0 is special code for original data
Npeels <- 14
peels <- 0:-Npeels
## Setup to run parallel, saving a single core free.
cpus <- parallel::detectCores()-2
sfStop()
sfInit( parallel=TRUE, cpus=cpus)
sfExportAll()
source('code/process_results.R')
getwd()
results <- list.files('results', pattern='boot_retro',
full.names=TRUE)
results <- list.files('results', pattern='boot_retro',
full.names=TRUE) %>%
lapply(FUN=function(x) cbind(readRDS(x))) %>%
bind_rows()
head(results)
results <- list.files('results', pattern='boot_retro',
full.names=TRUE) %>%
lapply(FUN=function(x) cbind(readRDS(x))) %>%
bind_rows() %>%
pivot_longer(cols=-c('model', 'boot', 'miller', 'baseyear'),
names_to='metric',
values_to='rho')
head(results)
results <- list.files('results', pattern='boot_retro',
full.names=TRUE) %>%
lapply(FUN=function(x) cbind(readRDS(x))) %>%
bind_rows() %>%
pivot_longer(cols=-c('model', 'boot', 'miller', 'baseyear'),
names_to='metric',
values_to='rho') %>%
## Split names into three types of Rho's
mutate(type=case_when(
grepl('WoodHole', metric) ~ 'WoodsHole',
grepl('AFSC', metric) ~ 'AFSC',
TRUE ~ 'Normal'),
baseyear=factor(baseyear),
## Split names into three metrics across types
metric=gsub('WoodHole_|AFSC_Hurtado_|.all', '',metric))
head(results)
## Which Rho metric to use?
results_normal <- filter(results, type=='Normal' & boot>0)
results_afsc <- filter(results, type=='AFSC' & boot>0)
results_woodshole <- filter(results, type=='WoodsHole' & boot>0)
### Process all results together and melt into long format for ggplot
results <- list.files('results', pattern='boot_retro',
full.names=TRUE) %>%
lapply(FUN=function(x) cbind(readRDS(x))) %>%
bind_rows() %>%
pivot_longer(cols=-c('model', 'boot', 'miller', 'baseyear'),
names_to='metric',
values_to='rho') %>%
## Split names into three types of Rho's
mutate(type=case_when(
grepl('WoodHole', metric) ~ 'WoodsHole',
grepl('AFSC', metric) ~ 'AFSC',
TRUE ~ 'Normal'),
baseyear=factor(baseyear),
## Split names into three metrics across types
metric=gsub('WoodHole_|AFSC_Hurtado_|.all', '',metric))
results <- list.files('results', pattern='boot_retro',
full.names=TRUE) %>%
lapply(FUN=function(x) cbind(readRDS(x))) %>%
bind_rows() %>%
pivot_longer(cols=-c('model', 'boot', 'miller', 'baseyear'),
names_to='metric',
values_to='rho') %>%
## Split names into three types of Rho's
mutate(type=case_when(
grepl('WoodHole', metric) ~ 'WoodsHole',
grepl('AFSC', metric) ~ 'AFSC',
TRUE ~ 'Normal'),
baseyear=factor(baseyear),
## Split names into three metrics across types
metric=gsub('WoodHole_|AFSC_Hurtado_|.all', '',metric))
## %>%
## the recruitment ones are not working?
##  filter(metric!='Rec')
## Which Rho metric to use?
results_normal <- filter(results, type=='Normal' & boot>0)
results_afsc <- filter(results, type=='AFSC' & boot>0)
results_woodshole <- filter(results, type=='WoodsHole' & boot>0)
## boot 0 is special code to run the real data so split this off
rho_obs <- results %>% filter(boot==0 & type=='AFSC')
head(rho_obs)
ff <- list.files('runs', pattern='parameter_res',
full.names=TRUE, recursive=TRUE)
par.results <- ff %>%
lapply(read.csv) %>%
bind_rows() %>% cbind(miller=FALSE)
saveRDS(par.results, file='results/par.results.RDS')
head(ff)
unique(rho_obs$miller)
results_afsc %>% group_by(model,miller, baseyear) %>%
filter(metric=='SSB') %>% summarize(count=n()) %>%
pivot_wider(c(model, miller),  names_from='baseyear', values_from='count')
filter(results_afsc, boot==1 & grepl('GOA_Pcod', x=model) &
metric=='SSB' & baseyear=='2015')
g <- results_afsc %>%
# filter(metric!='Rec') %>%
ggplot(aes(baseyear, y=rho, fill=miller)) + geom_violin() +
facet_grid(metric~model, scales='free') + geom_hline(yintercept=0, col='red')+
geom_point(data=rho_obs, col='red',pch='-', size=10) +
coord_cartesian(ylim=c(-.5,.5))
g
#Required packages
library(here)
getwd()
pars=readRDS('results/par.results.RDS')
head(pars)
ts.results=readRDS('results/ts.results.RDS')
test <- filter(ts.results, name=='ssb' & model=='EBS_Pcod') %>%
filter(year<=assess_yr-peel)
test2 <- test %>% group_by(model, assess_yr, year, peel) %>%
mutate(re=(value-value[boot==0])/value)
ggplot(test2, aes(year, re,
group=interaction(boot,peel))) +
geom_line() + facet_wrap('peel')
head(ts.results)
sort(unique(ts.results$boot))
head(par.results)
head(pars)
sort(unique(pars$boot))
head(results_afsc)
sort(unique(reults_afsc$boot))
sort(unique(results_afsc$boot))
pars=readRDS('results/par.results.RDS')
ts.results=readRDS('results/ts.results.RDS')
sort(unique(pars$boot))
